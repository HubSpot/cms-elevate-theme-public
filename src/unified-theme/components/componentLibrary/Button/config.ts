import { defineVariantConfig, createVariantSystem } from '../utils/index.js';

// Define Button variant configuration using the factory helper
export const BUTTON_VARIANT_CONFIG = defineVariantConfig({
  dimensions: {
    variant: {
      primary: {
        choiceFieldOptionLabel: 'Primary',
        props: {
          backgroundColor: 'purple',
          display: 'inline-block',
          color: 'white',
          borderStyle: 'solid',
          borderWidth: '0px',
          borderColor: 'transparent',
          hoverBackgroundColor: '#005f66',
          hoverColor: 'white',
          hoverBorderColor: 'transparent',
          borderRadius: '6px',
          fontFamily: 'inherit',
          fontWeight: 500,
          lineHeight: 1.5,
          textAlign: 'center',
          textDecoration: 'none',
          transition: 'all 0.2s ease-in-out',
          cursor: 'pointer',
          position: 'relative',
          className: 'btn-primary',
        },
      },
      secondary: {
        choiceFieldOptionLabel: 'Secondary',
        props: {
          display: 'inline-block',
          backgroundColor: '#f5f5f5',
          color: '#333',
          borderStyle: 'solid',
          borderWidth: '1px',
          borderColor: '#ccc',
          hoverBackgroundColor: '#e8e8e8',
          hoverColor: '#333',
          hoverBorderColor: '#bbb',
          borderRadius: '6px',
          fontFamily: 'inherit',
          fontWeight: 500,
          lineHeight: 1.5,
          textAlign: 'center',
          textDecoration: 'none',
          transition: 'all 0.2s ease-in-out',
          cursor: 'pointer',
          position: 'relative',
        },
      },
      outline: {
        choiceFieldOptionLabel: 'Outline',
        props: {
          display: 'inline-block',
          backgroundColor: 'transparent',
          color: 'purple',
          borderStyle: 'solid',
          borderWidth: '2px',
          borderColor: 'purple',
          hoverBackgroundColor: 'purple',
          hoverColor: 'white',
          hoverBorderColor: 'purple',
          borderRadius: '6px',
          fontFamily: 'inherit',
          fontWeight: 500,
          lineHeight: 1.5,
          textAlign: 'center',
          textDecoration: 'none',
          transition: 'all 0.2s ease-in-out',
          cursor: 'pointer',
          position: 'relative',
        },
      },
      ghost: {
        choiceFieldOptionLabel: 'Ghost',
        props: {
          display: 'inline-block',
          backgroundColor: 'transparent',
          color: 'purple',
          borderStyle: 'solid',
          borderWidth: '0px',
          borderColor: 'transparent',
          hoverBackgroundColor: 'rgba(0, 124, 137, 0.1)',
          hoverColor: '#005f66',
          hoverBorderColor: 'transparent',
          borderRadius: '6px',
          fontFamily: 'inherit',
          fontWeight: 500,
          lineHeight: 1.5,
          textAlign: 'center',
          textDecoration: 'none',
          transition: 'all 0.2s ease-in-out',
          cursor: 'pointer',
          position: 'relative',
        },
      },
      danger: {
        choiceFieldOptionLabel: 'Danger',
        props: {
          display: 'inline-block',
          backgroundColor: '#CC0000',
          color: 'white',
          borderStyle: 'solid',
          borderWidth: '0px',
          borderColor: 'transparent',
          hoverBackgroundColor: '#a60000',
          hoverColor: 'white',
          hoverBorderColor: 'transparent',
          borderRadius: '6px',
          fontFamily: 'inherit',
          fontWeight: 500,
          lineHeight: 1.5,
          textAlign: 'center',
          textDecoration: 'none',
          transition: 'all 0.2s ease-in-out',
          cursor: 'pointer',
          position: 'relative',
        },
      },
      unstyled: {
        choiceFieldOptionLabel: 'Unstyled',
        props: {
          display: 'inline-block',
          backgroundColor: 'transparent',
          padding: '0px',
          margin: '0px',
          color: 'inherit',
          cursor: 'pointer',
          textDecoration: 'none',
          borderRadius: '0px',
          minHeight: 'auto',
          borderWidth: '0px',
          borderStyle: 'none',
          borderColor: 'transparent',
        },
      },
      classBased: {
        choiceFieldOptionLabel: 'Class Based',
        props: {
          className: 'customButton',
        },
      },
    },
    size: {
      small: {
        choiceFieldOptionLabel: 'Small',
        props: {
          paddingTop: '8px',
          paddingBottom: '8px',
          paddingLeft: '16px',
          paddingRight: '16px',
          fontSize: '14px',
        },
      },
      medium: {
        choiceFieldOptionLabel: 'Medium',
        props: {
          paddingTop: '12px',
          paddingBottom: '12px',
          paddingLeft: '24px',
          paddingRight: '24px',
          fontSize: '16px',
        },
      },
      large: {
        choiceFieldOptionLabel: 'Large',
        props: {
          paddingTop: '16px',
          paddingBottom: '16px',
          paddingLeft: '32px',
          paddingRight: '32px',
          fontSize: '18px',
        },
      },
    },
  },
} as const);

// Instantiate the variant system - clean and simple!
export const buttonVariantSystem = createVariantSystem(BUTTON_VARIANT_CONFIG);
